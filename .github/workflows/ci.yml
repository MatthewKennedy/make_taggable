---
name: Tests

on:
  pull_request:
    branches:
      - '*'
  push:
    branches:
      - master
jobs:

# MYSQL ##################
  mysql:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ruby: ['2.6', '2.7']
        gemfile:
          - rails_5
          - rails_6
          - rails_6_1
          - rails_master
    env:
      BUNDLE_GEMFILE: ${{ github.workspace }}/gemfiles/${{ matrix.gemfile }}.gemfile
      BUNDLE_PATH_RELATIVE_TO_CWD: true

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: password
          MSQL_DATABASE: my_sql_test_db
        ports: ['3306:3306']
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@master

      - name: Set up Ruby ${{ matrix.ruby }}
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler: default
          bundler-cache: true

      - name: Install dependencies
        run: |
          gem install bundler
          bundle install --jobs 4 --retry 3
          bundle exec appraisal install

      - name: Run tests
        env:
          DATABASE_URL: mysql2://root:password@127.0.0.1:3306/my_sql_test_db
          RAILS_ENV: test
        run: |
          cp spec/dummy/config/mysql_database.yml.ci spec/dummy/config/database.yml
          bundle exec rake set_db
          bundle exec appraisal rake

# POSTGRES ##################
  postgres:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ruby: ['2.6', '2.7']

    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: pg_test
        ports: ['5432:5432']

    steps:
      - uses: actions/checkout@master

      - name: Set up Ruby ${{ matrix.ruby }}
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}

      - name: Cache gems
        uses: actions/cache@v1
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-${{ matrix.ruby }}-gem-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.ruby }}-gem-

      - name: Install dependencies
        run: |
          gem install bundler
          bundle install --jobs 4 --retry 3
          bundle exec appraisal install

      - name: Run tests
        env:
          DATABASE_URL: postgres://postgres:password@localhost:5432/pg_test
          RAILS_ENV: test
        run: |
          cp spec/dummy/config/pg_database.yml.ci spec/dummy/config/database.yml
          bundle exec rake set_db
          bundle exec appraisal rake

# SQLITE ##################
  sqlite:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ruby: ['2.6', '2.7']
    steps:
      - uses: actions/checkout@master

      - name: Set up Ruby ${{ matrix.ruby }}
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}

      - name: Cache gems
        uses: actions/cache@v1
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-${{ matrix.ruby }}-gem-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.ruby }}-gem-

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install libsqlite3-dev
          gem update --system
          gem install bundler
          bundle install --jobs 4 --retry 3
          bundle exec appraisal install

      - name: Run tests
        env:
          RAILS_ENV: test
        run: |
          bundle exec rake set_db
          bundle exec appraisal rake
